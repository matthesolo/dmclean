const { Client, version } = require('discord.js-selfbot-v13');
const matthe = new Client();

const token = ""; // HesabÄ±nÄ±n tokeni
const ID = "1365382843815034960"; //kendi idni giricen
const komut = "!clean"; // Komut adÄ±

matthe.on('ready', () => {
    console.log(`ðŸ’š Matthe Cleaner Bot baÅŸarÄ±yla ${matthe.user.tag} olarak giriÅŸ yaptÄ±! Botun ID: (${matthe.user.id}) Versiyon: ${version}`);
});

matthe.on('messageCreate', async message => {
    if (message.author.id !== ID) {
        return;
    }

    if (message.content.startsWith(komut)) {
        console.log(`[!] == Command Run: ${message.content}`);

        // HÄ±zlÄ± / YavaÅŸ mod seÃ§imi
        const args = message.content.split(" ").slice(1); // Komut kÄ±smÄ±nÄ± ayÄ±rÄ±yoruz
        let speed = args[0] || "normal";  // HÄ±zlÄ± ya da yavaÅŸ mod
        let limit = args[1] || "5";  // Silinecek mesaj sayÄ±sÄ± (varsayÄ±lan: 5)

        // KullanÄ±cÄ±ya hÄ±z modunu ve limit deÄŸerini soruyoruz
        if (!args[0] || !args[1]) {
            message.reply("LÃ¼tfen komutunuzu ÅŸu formatta yazÄ±n: `clean [hÄ±zlÄ±/yavaÅŸ] [silinecek_mesaj_sayÄ±sÄ±]`");
            return;
        }

        console.log(`HÄ±z Modu: ${speed}, Mesaj Limiti: ${limit}`);

        // HÄ±zlÄ± veya YavaÅŸ mod iÅŸlemi
        let deleteSpeed = speed === "hÄ±zlÄ±" ? 100 : 1000; // HÄ±zlÄ±: 100ms, YavaÅŸ: 1000ms

        try {
            const messages = await message.channel.messages.fetch({ limit: limit });
            let userMessages = messages.filter(m => m.author.id === matthe.user.id);
            let i = 0;

            // MesajlarÄ± silme iÅŸlemi
            for (const msg of userMessages.values()) {
                setTimeout(async () => {
                    try {
                        await msg.delete();
                        console.log(`Mesaj silindi: ${msg.id}`);
                    } catch (err) {
                        console.error('Mesaj silme hatasÄ±:', err);
                    }
                }, i * deleteSpeed);

                i++;
            }
        } catch (error) {
            console.error('Error fetching or deleting messages:', error);
        }
    }
});

matthe.login(token);
